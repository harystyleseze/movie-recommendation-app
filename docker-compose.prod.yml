# Production Docker Compose Configuration
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0.8
    container_name: moveere-mongodb-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: moveere_prod
    volumes:
      - mongodb_data_prod:/data/db
      - ./scripts/mongo-init.prod.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - moveere-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: moveere-backend-prod
    restart: always
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    networks:
      - moveere-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Frontend Build and Static Files
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: moveere-frontend-prod
    restart: always
    networks:
      - moveere-network
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25.5-alpine
    container_name: moveere-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_static:/usr/share/nginx/html:ro
      # For SSL certificates (uncomment when ready)
      # - ./ssl:/etc/nginx/ssl:ro
    networks:
      - moveere-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Optional: Monitoring with simple health checker
  healthchecker:
    image: curlimages/curl:8.6.0
    container_name: moveere-health-checker
    restart: unless-stopped
    networks:
      - moveere-network
    depends_on:
      - nginx
    command: >
      sh -c "
        while true; do
          sleep 60
          curl -f http://nginx/health || echo 'Health check failed'
          curl -f http://nginx/api/health || echo 'API health check failed'
        done
      "
    deploy:
      resources:
        limits:
          memory: 32M
        reservations:
          memory: 16M

# Volumes
volumes:
  mongodb_data_prod:
    driver: local
  frontend_static:
    driver: local

# Networks
networks:
  moveere-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16